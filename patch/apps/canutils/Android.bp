// Copyright (C) 2019 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package {
    default_applicable_licenses: ["external_canutils_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
// See: http://go/android-license-faq
license {
    name: "external_canutils_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-BSD",
        "SPDX-license-identifier-MIT",
        "SPDX-license-identifier-NCSA",
        "legacy_notice",
        "legacy_unencumbered",
    ],
    license_text: [
        "LICENSE",
    ],
}

cc_defaults {
    name: "can-utils_defaults",

    cflags: [
	"-O2",
	"-g",
	"-W",
	"-Wall",
        "-Wno-unused-parameter",
	"-DSO_RXQ_OVFL=40",
	"-DPF_CAN=29",
	"-DAF_CAN=PF_CAN",
    ],
    local_include_dirs: [
        "include",
    ],
}

cc_library {
    name: "libcan",
    defaults: ["can-utils_defaults"],
    srcs: [
        "lib.c",
	"canframelen.c",
    ],
}

cc_binary {
    name: "candump",
    defaults: ["can-utils_defaults"],
    srcs: [
        "candump.c",
    ],
    static_libs: [
        "libcan",
    ],
}

cc_binary {
    name: "cansend",
    defaults: ["can-utils_defaults"],
    srcs: [
        "cansend.c",
    ],
    static_libs: [
        "libcan",
    ],
}
